// Generated by view binder compiler. Do not edit!
package com.example.medreminder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medreminder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMedicineBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardLayout;

  @NonNull
  public final ImageView delete;

  @NonNull
  public final ImageView editMed;

  @NonNull
  public final ImageView expend;

  @NonNull
  public final TextView lastTaken;

  @NonNull
  public final ConstraintLayout layout;

  @NonNull
  public final TextView medName;

  @NonNull
  public final TextView medType;

  @NonNull
  public final TextView prescribeQuantity;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final TextView restore;

  @NonNull
  public final ImageView taken;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView time;

  @NonNull
  public final TextView totalTaken;

  private ItemMedicineBinding(@NonNull CardView rootView, @NonNull CardView cardLayout,
      @NonNull ImageView delete, @NonNull ImageView editMed, @NonNull ImageView expend,
      @NonNull TextView lastTaken, @NonNull ConstraintLayout layout, @NonNull TextView medName,
      @NonNull TextView medType, @NonNull TextView prescribeQuantity, @NonNull TextView quantity,
      @NonNull TextView restore, @NonNull ImageView taken, @NonNull TextView textView14,
      @NonNull TextView textView15, @NonNull TextView textView16, @NonNull TextView textView17,
      @NonNull TextView time, @NonNull TextView totalTaken) {
    this.rootView = rootView;
    this.cardLayout = cardLayout;
    this.delete = delete;
    this.editMed = editMed;
    this.expend = expend;
    this.lastTaken = lastTaken;
    this.layout = layout;
    this.medName = medName;
    this.medType = medType;
    this.prescribeQuantity = prescribeQuantity;
    this.quantity = quantity;
    this.restore = restore;
    this.taken = taken;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView16 = textView16;
    this.textView17 = textView17;
    this.time = time;
    this.totalTaken = totalTaken;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMedicineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMedicineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_medicine, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMedicineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardLayout = (CardView) rootView;

      id = R.id.delete;
      ImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.edit__med;
      ImageView editMed = ViewBindings.findChildViewById(rootView, id);
      if (editMed == null) {
        break missingId;
      }

      id = R.id.expend;
      ImageView expend = ViewBindings.findChildViewById(rootView, id);
      if (expend == null) {
        break missingId;
      }

      id = R.id.last_taken;
      TextView lastTaken = ViewBindings.findChildViewById(rootView, id);
      if (lastTaken == null) {
        break missingId;
      }

      id = R.id.layout;
      ConstraintLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.medName;
      TextView medName = ViewBindings.findChildViewById(rootView, id);
      if (medName == null) {
        break missingId;
      }

      id = R.id.med_type;
      TextView medType = ViewBindings.findChildViewById(rootView, id);
      if (medType == null) {
        break missingId;
      }

      id = R.id.prescribe_quantity;
      TextView prescribeQuantity = ViewBindings.findChildViewById(rootView, id);
      if (prescribeQuantity == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = ViewBindings.findChildViewById(rootView, id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.restore;
      TextView restore = ViewBindings.findChildViewById(rootView, id);
      if (restore == null) {
        break missingId;
      }

      id = R.id.taken;
      ImageView taken = ViewBindings.findChildViewById(rootView, id);
      if (taken == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.total_taken;
      TextView totalTaken = ViewBindings.findChildViewById(rootView, id);
      if (totalTaken == null) {
        break missingId;
      }

      return new ItemMedicineBinding((CardView) rootView, cardLayout, delete, editMed, expend,
          lastTaken, layout, medName, medType, prescribeQuantity, quantity, restore, taken,
          textView14, textView15, textView16, textView17, time, totalTaken);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
